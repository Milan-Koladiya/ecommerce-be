//E_commerce website

//Tables=============================

Users:-
    -id SERIAL PRIMARY KEY,
    -first_name VARCHAR(100),
    -last_name VARCHAR(100),
    -email VARCHAR(100) UNIQUE NOT NULL,
    -password TEXT NOT NULL,
    -role ENUM('seller', 'buyer') NOT NULL DEFAULT 'buyer',
    -created_at TIMESTAMP DEFAULT NOW()
    -updated_at TIMESTAMP DEFAULT NOW()
    -deleted_at TIMESTAMP

Category:-
    -id SERIAL PRIMARY KEY,
    -name VARCHAR(100) NOT NULL,
    -seller_id INTEGER REFERENCES users(id),
    -created_at TIMESTAMP DEFAULT NOW()
    -updated_at TIMESTAMP DEFAULT NOW()
    -deleted_at TIMESTAMP

Subcategory:-
    -id SERIAL PRIMARY KEY,
    -name VARCHAR(100) NOT NULL,
    -category_id INTEGER REFERENCES categories(id),
    -seller_id INTEGER REFERENCES users(id),
    -created_at TIMESTAMP DEFAULT NOW()
    -updated_at TIMESTAMP DEFAULT NOW()
    -deleted_at TIMESTAMPULT NOW()

    
Product:-
    -id SERIAL PRIMARY KEY,
    -name VARCHAR(150) NOT NULL,
    -description TEXT,
    -price DECIMAL(10,2) NOT NULL,
    -quantity INTEGER NOT NULL,
    -image_url TEXT,
    -category_id INTEGER REFERENCES categories(id),
    -subcategory_id INTEGER REFERENCES subcategories(id),
    -seller_id INTEGER REFERENCES users(id),
    -created_at TIMESTAMP DEFAULT NOW()
    -updated_at TIMESTAMP DEFAULT NOW()
    -deleted_at TIMESTAMPULT NOW()

Addtocart:-
    -id SERIAL PRIMARY KEY,
    -user_id INTEGER REFERENCES users(id),
    -product_id INTEGER REFERENCES products(id),
    -quantity INTEGER NOT NULL DEFAULT 1,
    -created_at TIMESTAMP DEFAULT NOW(),
    -updated_at TIMESTAMP DEFAULT NOW()
    -UNIQUE(user_id, product_id)

Orders:-
    -id SERIAL PRIMARY KEY,
    -user_id INTEGER REFERENCES users(id),
    -total_amount DECIMAL(10,2),
    -status ENUM('PENDING', 'PAID', 'FAILED') DEFAULT 'PENDING',
    -payment_reference VARCHAR(255),
    -created_at TIMESTAMP DEFAULT NOW()
    -updated_at TIMESTAMP DEFAULT NOW()

Order_items:-
    -id SERIAL PRIMARY KEY,
    -order_id INTEGER REFERENCES orders(id),
    -product_id INTEGER REFERENCES products(id),
    -quantity INTEGER NOT NULL,
    -price DECIMAL(10,2) NOT NULL
    -created_at TIMESTAMP DEFAULT NOW(),

Payments:-
    -id SERIAL PRIMARY KEY,
    -order_id INTEGER REFERENCES orders(id),
    -amount DECIMAL,
    -status ENUM('SUCCESS', 'FAILED') DEFAULT 'SUCCESS',
    -payment_method VARCHAR(50),
    -paid_at TIMESTAMP DEFAULT NOW()
    -created_at TIMESTAMP DEFAULT NOW(),

//APIs of E_commerce========================


Users (Auth & Profile)
==============================
    POST API: /auth/register ( Register a new user )
    POST API: /auth/login ( Login user )
    GET API: /users/me ( Get current user profile ) 
    PUT API: /users/me ( Update current user profile )
    DELETE API: /users/me ( Soft-delete )

Products (Seller & Buyer View)
==============================
    POST API: /products ( Create a new product )
    POST API: /products/filter ( Get all products with filters)
    GET API: /products/:id ( Get a single product by ID)
    PUT API: /products/:id ( Update product)
    DELETE API: /products/:id ( Soft-delete product )

Categories
==============================
    POST API: /categories ( Create a new category )
    GET API: /categories ( Get all categories)
    PUT API: /categories/:id ( Update category )
    DELETE API: /categories/:id ( Soft-delete category)

Subcategories 
==============================
    POST API: /subcategories ( Create a new subcategory)
    GET API: /subcategories?category_id ( Get subcategories by category)
    PUT API: /subcategories/:id ( Update subcategory)
    DELETE API: /subcategories/:id ( Delete subcategory)

Cart:
==============================
    GET API: /cart/me ( Get current user's cart items)
    POST API: /cart ( Add product to cart )
    PUT API: /cart/:product_id ( Update quantity for product in cart)
    DELETE API: /cart/:product_id ( Remove product from cart)
    DELETE API: /cart ( Clear entire cart)

Orders:
==============================
    POST API: /orders ( Create a new order from cart)
    GET API: /orders ( Get list of current user's orders)
    GET API: /orders/:id ( Get single order details)

Payments
==============================
    POST /payments ( Initiate payment for an order)
    GET /payments/:order_id ( Get payment status for an order)



















